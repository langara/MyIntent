apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.github.dcendents.android-maven'

group='com.github.langara'

android {
    compileSdkVersion Vers.androidCompileSdk

    lintOptions {
        abortOnError true
    }

    defaultConfig {
        minSdkVersion Vers.androidMinSdk
        targetSdkVersion Vers.androidTargetSdk
        versionCode myintent_code
        versionName myintent_name
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    resourcePrefix 'mv_'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation Deps.kotlinStdlib
    implementation Deps.androidSupportRecyclerview
    implementation Deps.androidSupportDesign
    implementation Deps.androidSupportAnnotations
    testImplementation Deps.junit
    testImplementation Deps.googleTruth
    implementation project(':mydrawables')
    implementation project(':myutils')
    implementation project(':myloggers')
    implementation project(':myres')
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

//task javadoc(type: Javadoc) {
//    failOnError false
//    source = android.sourceSets.main.java.sourceFiles
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}
//
//// build a jar with javadoc
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.getDestinationDir()
//}

artifacts {
    archives sourcesJar
//    archives javadocJar
}
